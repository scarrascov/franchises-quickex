{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/ccontrerasl/dev/mobile/Quickex/src/screens/LoginScreen.tsx\";\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport imageLogo from \"../assets/images/logo.png\";\nimport constants from \"../config/constants\";\nimport { TextInput, Button, Dialog, Portal, Paragraph, Provider } from 'react-native-paper';\nimport dismissKeyboard from 'react-native-dismiss-keyboard';\n\nvar LoginScreen = function (_React$Component) {\n  _inherits(LoginScreen, _React$Component);\n\n  function LoginScreen(props) {\n    var _this;\n\n    _classCallCheck(this, LoginScreen);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LoginScreen).call(this, props));\n\n    _this._showDialog = function () {\n      return _this.setState({\n        error_visible: true\n      });\n    };\n\n    _this._hideDialog = function () {\n      return _this.setState({\n        error_visible: false\n      });\n    };\n\n    _this.login = function () {\n      dismissKeyboard();\n      console.log(\"Iniciando Sesión\");\n      var email = _this.state.email;\n      var passwd = _this.state.password;\n      fetch(constants.API_URL + 'jwt-auth/v1/token', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username: email,\n          password: passwd\n        })\n      }).then(function (response) {\n        return response.json();\n      }).then(function (r) {\n        if (r.token) {\n          _this.props.navigation.navigate('Inicio', {\n            data: r\n          });\n        } else if (r.data.status == 403) {\n          _this.setState({\n            error_message: 'Nombre de usuario o Contraseña incorrecta',\n            error_visible: true\n          });\n        }\n\n        console.log(r);\n      }).catch(function (error) {\n        console.log(error.message);\n      });\n    };\n\n    _this.state = {\n      email: '',\n      password: '',\n      error_visible: false,\n      error_message: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(LoginScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Provider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        }\n      }, React.createElement(Portal, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        }\n      }, React.createElement(KeyboardAvoidingView, {\n        style: styles.container,\n        behavior: \"padding\",\n        keyboardVerticalOffset: 30,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        }\n      }, React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        }\n      }, React.createElement(Image, {\n        source: imageLogo,\n        style: styles.logo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        }\n      }), React.createElement(View, {\n        style: styles.inputView,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        }\n      }, React.createElement(TextInput, {\n        label: \"Correo Electr\\xF3nico\",\n        style: styles.inputText,\n        value: this.state.email,\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            email: text\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        }\n      })), React.createElement(View, {\n        style: styles.inputView,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        }\n      }, React.createElement(TextInput, {\n        label: \"Password\",\n        secureTextEntry: true,\n        autoCorrect: false,\n        style: styles.inputText,\n        value: this.state.password,\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            password: text\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        }\n      })), React.createElement(Button, {\n        icon: \"account-box\",\n        mode: \"contained\",\n        onPress: this.login,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        }\n      }, \"Iniciar Sesi\\xF3n\")), React.createElement(Dialog, {\n        visible: this.state.error_visible,\n        onDismiss: this._hideDialog,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        }\n      }, React.createElement(Dialog.Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        }\n      }, \"Error\"), React.createElement(Dialog.Content, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        }\n      }, React.createElement(Paragraph, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        }\n      }, this.state.error_message))))));\n    }\n  }]);\n\n  return LoginScreen;\n}(React.Component);\n\nexport { LoginScreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    width: \"100%\",\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  },\n  logo: {\n    flex: 1,\n    width: \"30%\",\n    resizeMode: \"contain\",\n    alignSelf: \"center\",\n    top: -30\n  },\n  inputView: {\n    width: \"80%\",\n    backgroundColor: \"#fff\",\n    marginTop: -10,\n    height: 40,\n    marginBottom: 20,\n    justifyContent: \"center\"\n  },\n  inputText: {\n    backgroundColor: \"#fff\",\n    color: \"#fff\"\n  }\n});","map":{"version":3,"sources":["/Users/ccontrerasl/dev/mobile/Quickex/src/screens/LoginScreen.tsx"],"names":["React","imageLogo","constants","TextInput","Button","Dialog","Portal","Paragraph","Provider","dismissKeyboard","LoginScreen","props","_showDialog","setState","error_visible","_hideDialog","login","console","log","email","state","passwd","password","fetch","API_URL","method","headers","Accept","body","JSON","stringify","username","then","response","json","r","token","navigation","navigate","data","status","error_message","catch","error","message","styles","container","logo","inputView","inputText","text","Component","StyleSheet","create","flex","width","backgroundColor","alignItems","justifyContent","resizeMode","alignSelf","top","marginTop","height","marginBottom","color"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { StyleSheet, Text, View, Image, KeyboardAvoidingView, Keyboard } from 'react-native';\nimport imageLogo from \"../assets/images/logo.png\";\nimport constants from '../config/constants';\nimport { TextInput, Button, Dialog, Portal, Paragraph, Provider } from 'react-native-paper';\nimport dismissKeyboard from 'react-native-dismiss-keyboard';\n\nexport default class LoginScreen extends React.Component {\n  \n  constructor(props) {\n    super(props);\n      this.state = {\n        email:'',\n        password:'',\n        error_visible:false,\n        error_message:\"\"\n      };\n  }\n  _showDialog = () => this.setState({ error_visible: true });\n  _hideDialog = () => this.setState({ error_visible: false });\n\n  login = () => {\n    dismissKeyboard();\n    console.log(\"Iniciando Sesión\");\n    let email = this.state.email;\n    let passwd = this.state.password;\n\n    fetch(constants.API_URL + 'jwt-auth/v1/token', {\n        method: 'POST',\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n            username: email,\n            password: passwd,\n        }),\n    }).then((response) => response.json()\n    ).then((r) => {\n          if(r.token){\n            this.props.navigation.navigate('Inicio', {data: r});\n          }\n          else if(r.data.status == 403){\n            this.setState( {error_message:'Nombre de usuario o Contraseña incorrecta', error_visible:true});\n          }\n          \n         console.log(r);\n    }).catch((error)=>{\n        console.log(error.message)\n    })\n    ;\n    \n\n  };\n  render(){\n    return (\n\n      \n      <Provider>\n        <Portal>\n          <KeyboardAvoidingView\n            style={styles.container}\n            behavior=\"padding\"\n            keyboardVerticalOffset={30}n          >\n          <View style={styles.container}>\n            <Image source={imageLogo} style={styles.logo} />\n            <View style={styles.inputView} >\n              <TextInput label='Correo Electrónico' style={styles.inputText}  value={this.state.email} onChangeText={text => this.setState({email:text})}/>\n            </View>\n            <View style={styles.inputView} >\n            <TextInput label='Password' secureTextEntry={true} autoCorrect={false} style={styles.inputText} value={this.state.password} onChangeText={text => this.setState({ password:text })}/>\n            </View>\n              <Button icon=\"account-box\" mode=\"contained\" onPress={this.login}>\n                Iniciar Sesión\n              </Button>\n          </View>\n          <Dialog\n             visible={this.state.error_visible}\n             onDismiss={this._hideDialog}>\n            <Dialog.Title>Error</Dialog.Title>\n            <Dialog.Content>\n              <Paragraph>{this.state.error_message}</Paragraph>\n            </Dialog.Content>\n          </Dialog>\n          </KeyboardAvoidingView>\n        </Portal>\n      </Provider>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    width:\"100%\",\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  },\n  \n  logo:{\n    flex: 1,\n    width: \"30%\",\n    resizeMode: \"contain\",\n    alignSelf: \"center\",\n    top:-30\n  },\n  inputView:{\n    width:\"80%\",\n    backgroundColor:\"#fff\",\n    marginTop:-10,\n    height:40,\n    marginBottom:20,\n    justifyContent:\"center\",\n\n  },\n  inputText:{\n    backgroundColor:\"#fff\",\n    color:\"#fff\"\n  },\n});"]},"metadata":{},"sourceType":"module"}