{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/ccontrerasl/dev/mobile/Quickex/src/screens/LoginScreen.tsx\";\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport imageLogo from \"../assets/images/logo.png\";\nimport constants from \"../config/constants\";\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      email: \"\",\n      password: \"\"\n    };\n\n    _this.login = function () {\n      console.log(\"Iniciando Sesión\");\n      var email = _this.state.email;\n      var passwd = _this.state.password;\n      fetch(constants.API_URL + 'jwt-auth/v1/token', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          user: email,\n          password: passwd\n        })\n      }).then(function (response) {\n        return response.json();\n      }).then(function (responseJson) {\n        console.log(responseJson);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(KeyboardAvoidingView, {\n        style: styles.container,\n        behavior: \"padding\",\n        enabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        }\n      }, React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        }\n      }, React.createElement(Image, {\n        source: imageLogo,\n        style: styles.logo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        }\n      }), React.createElement(View, {\n        style: styles.inputView,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        }\n      }, React.createElement(TextInput, {\n        style: styles.inputText,\n        placeholder: \"Email...\",\n        placeholderTextColor: \"#003f5c\",\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            email: text\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        }\n      })), React.createElement(View, {\n        style: styles.inputView,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        }\n      }, React.createElement(TextInput, {\n        secureTextEntry: true,\n        style: styles.inputText,\n        placeholder: \"Password...\",\n        placeholderTextColor: \"#003f5c\",\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            password: text\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        }\n      })), React.createElement(TouchableOpacity, {\n        style: styles.loginBtn,\n        onPress: this.login,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        }\n      }, React.createElement(Text, {\n        style: styles.loginText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        }\n      }, \"Iniciar Sesi\\xF3n\"))));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport { App as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    width: \"100%\",\n    backgroundColor: '#003f5c',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  },\n  logo: {\n    flex: 1,\n    width: \"30%\",\n    resizeMode: \"contain\",\n    alignSelf: \"center\",\n    top: -30\n  },\n  inputView: {\n    width: \"80%\",\n    backgroundColor: \"#465881\",\n    borderRadius: 25,\n    height: 40,\n    marginBottom: 20,\n    justifyContent: \"center\",\n    padding: 20\n  },\n  inputText: {\n    height: 40,\n    color: \"white\"\n  },\n  forgot: {\n    color: \"white\",\n    fontSize: 11\n  },\n  loginBtn: {\n    width: \"80%\",\n    backgroundColor: \"#fb5b5a\",\n    borderRadius: 25,\n    height: 50,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: 40,\n    marginBottom: 10\n  },\n  loginText: {\n    color: \"white\"\n  }\n});","map":{"version":3,"sources":["/Users/ccontrerasl/dev/mobile/Quickex/src/screens/LoginScreen.tsx"],"names":["React","imageLogo","constants","App","state","email","password","login","console","log","passwd","fetch","API_URL","method","headers","Accept","body","JSON","stringify","user","then","response","json","responseJson","styles","container","logo","inputView","inputText","text","setState","loginBtn","loginText","Component","StyleSheet","create","flex","width","backgroundColor","alignItems","justifyContent","resizeMode","alignSelf","top","borderRadius","height","marginBottom","padding","color","forgot","fontSize","marginTop"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { StyleSheet, Text, View, TextInput, TouchableOpacity, Image, KeyboardAvoidingView } from 'react-native';\nimport imageLogo from \"../assets/images/logo.png\";\nimport constants from '../config/constants';\nexport default class App extends React.Component {\n  state={\n    email:\"\",\n    password:\"\"\n  }\n  login = () => {\n    console.log(\"Iniciando Sesión\");\n    let email = this.state.email;\n    let passwd = this.state.password;\n\n    fetch(constants.API_URL + 'jwt-auth/v1/token', {\n        method: 'POST',\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n            user: email,\n            password: passwd,\n        }),\n    }).then((response) => response.json()\n    ).then((responseJson) => {\n         console.log(responseJson);\n    })\n    ;\n    \n\n  };\n  render(){\n    return (\n    <KeyboardAvoidingView\n        style={styles.container}\n        behavior=\"padding\"\n        enabledn      >\n      <View style={styles.container}>\n        <Image source={imageLogo} style={styles.logo} />\n        <View style={styles.inputView} >\n          <TextInput  \n            style={styles.inputText}\n            placeholder=\"Email...\" \n            placeholderTextColor=\"#003f5c\"\n            onChangeText={text => this.setState({email:text})}/>\n        </View>\n        <View style={styles.inputView} >\n          <TextInput  \n            secureTextEntry\n            style={styles.inputText}\n            placeholder=\"Password...\" \n            placeholderTextColor=\"#003f5c\"\n            onChangeText={text => this.setState({password:text})}/>\n        </View>\n        \n        <TouchableOpacity style={styles.loginBtn} onPress={this.login}>\n          <Text style={styles.loginText}>Iniciar Sesión</Text>\n        </TouchableOpacity>\n\n  \n      </View>\n    </KeyboardAvoidingView>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    width:\"100%\",\n    backgroundColor: '#003f5c',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  },\n  \n  logo:{\n    flex: 1,\n    width: \"30%\",\n    resizeMode: \"contain\",\n    alignSelf: \"center\",\n    top:-30\n  },\n  inputView:{\n    width:\"80%\",\n    backgroundColor:\"#465881\",\n    borderRadius:25,\n    height:40,\n    marginBottom:20,\n    justifyContent:\"center\",\n    padding:20\n  },\n  inputText:{\n    height:40,\n    color:\"white\"\n  },\n  forgot:{\n    color:\"white\",\n    fontSize:11\n  },\n  loginBtn:{\n    width:\"80%\",\n    backgroundColor:\"#fb5b5a\",\n    borderRadius:25,\n    height:50,\n    alignItems:\"center\",\n    justifyContent:\"center\",\n    marginTop:40,\n    marginBottom:10\n  },\n  loginText:{\n    color:\"white\"\n  }\n});"]},"metadata":{},"sourceType":"module"}