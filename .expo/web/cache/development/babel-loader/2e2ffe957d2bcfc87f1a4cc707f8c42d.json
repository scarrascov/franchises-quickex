{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/ccontrerasl/dev/mobile/Quickex/src/screens/LoginScreen.tsx\";\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport imageLogo from \"../assets/images/logo.png\";\nimport constants from \"../config/constants\";\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport AccountBoxIcon from '@material-ui/icons/AccountBox';\nvar useStyles = makeStyles(function (theme) {\n  return createStyles({\n    root: {\n      '& .MuiTextField-root': {\n        margin: theme.spacing(1),\n        width: '25ch'\n      }\n    }\n  });\n});\n\nvar LoginScreen = function (_React$Component) {\n  _inherits(LoginScreen, _React$Component);\n\n  function LoginScreen(props) {\n    var _this;\n\n    _classCallCheck(this, LoginScreen);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LoginScreen).call(this, props));\n\n    _this.login = function () {\n      console.log(\"Iniciando Sesión\");\n      var email = _this.state.email;\n      var passwd = _this.state.password;\n      fetch(constants.API_URL + 'jwt-auth/v1/token', {\n        method: 'POST',\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username: email,\n          password: passwd\n        })\n      }).then(function (response) {\n        return response.json();\n      }).then(function (r) {\n        if (r.token) {\n          _this.setState({\n            token: r.token,\n            user_email: r.user_email,\n            user_nicename: r.user_nicename,\n            user_display_name: r.user_display_name\n          });\n\n          _this.props.navigation.navigate('Inicio');\n        } else if (r.data.status == 403) {\n          Alert.alert('Error', 'Nombre de usuario o Contraseña incorrecta');\n        }\n\n        console.log(r);\n      }).catch(function (error) {\n        console.log(error.message);\n      });\n    };\n\n    _this.state = {\n      token: '',\n      user_email: '',\n      user_nicename: '',\n      user_display_name: '',\n      email: '',\n      password: ''\n    };\n    return _this;\n  }\n\n  _createClass(LoginScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(KeyboardAvoidingView, {\n        style: styles.container,\n        behavior: \"padding\",\n        enabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        }\n      }, React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        }\n      }, React.createElement(Image, {\n        source: imageLogo,\n        style: styles.logo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        }\n      }), React.createElement(View, {\n        style: styles.inputView,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        }\n      }, React.createElement(TextField, {\n        id: \"email\",\n        label: \"Correo Electr\\xF3nico\",\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            email: text\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        }\n      })), React.createElement(View, {\n        style: styles.inputView,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        }\n      }, React.createElement(TextField, {\n        id: \"passwd\",\n        type: \"password\",\n        label: \"Password\",\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            password: text\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        }\n      })), React.createElement(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        endIcon: React.createElement(AccountBoxIcon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          }\n        }),\n        onPress: this.login,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        }\n      }, \"Iniciar Sesi\\xF3n\"), React.createElement(TouchableOpacity, {\n        style: styles.loginBtn,\n        onPress: this.login,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        }\n      }, React.createElement(Text, {\n        style: styles.loginText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        }\n      }, \"Iniciar Sesi\\xF3n\"))));\n    }\n  }]);\n\n  return LoginScreen;\n}(React.Component);\n\nexport { LoginScreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    width: \"100%\",\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  },\n  logo: {\n    flex: 1,\n    width: \"30%\",\n    resizeMode: \"contain\",\n    alignSelf: \"center\",\n    top: -30\n  },\n  forgot: {\n    color: \"white\",\n    fontSize: 11\n  },\n  loginBtn: {\n    width: \"80%\",\n    backgroundColor: \"#fb5b5a\",\n    borderRadius: 25,\n    height: 50,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: 40,\n    marginBottom: 10\n  },\n  loginText: {\n    color: \"white\"\n  }\n});","map":{"version":3,"sources":["/Users/ccontrerasl/dev/mobile/Quickex/src/screens/LoginScreen.tsx"],"names":["React","imageLogo","constants","TextField","Button","createStyles","makeStyles","AccountBoxIcon","useStyles","theme","root","margin","spacing","width","LoginScreen","props","login","console","log","email","state","passwd","password","fetch","API_URL","method","headers","Accept","body","JSON","stringify","username","then","response","json","r","token","setState","user_email","user_nicename","user_display_name","navigation","navigate","data","status","Alert","alert","catch","error","message","styles","container","logo","inputView","text","loginBtn","loginText","Component","StyleSheet","create","flex","alignItems","justifyContent","resizeMode","alignSelf","top","forgot","color","fontSize","backgroundColor","borderRadius","height","marginTop","marginBottom"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { StyleSheet, Text, View, TextInput, TouchableOpacity, Image, KeyboardAvoidingView, Alert } from 'react-native';\nimport imageLogo from \"../assets/images/logo.png\";\nimport constants from '../config/constants';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport AccountBoxIcon from '@material-ui/icons/AccountBox';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      '& .MuiTextField-root': {\n        margin: theme.spacing(1),\n        width: '25ch',\n      },\n    },\n  }),\n);\n\nexport default class LoginScreen extends React.Component {\n  constructor(props) {\n    super(props);\n      this.state = {\n        token: '',\n        user_email: '',\n        user_nicename: '',\n        user_display_name:'',\n        email:'',\n        password:''\n      };\n  }\n  login = () => {\n    console.log(\"Iniciando Sesión\");\n    let email = this.state.email;\n    let passwd = this.state.password;\n\n    fetch(constants.API_URL + 'jwt-auth/v1/token', {\n        method: 'POST',\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n            username: email,\n            password: passwd,\n        }),\n    }).then((response) => response.json()\n    ).then((r) => {\n          if(r.token){\n            this.setState({\n              token: r.token,\n              user_email: r.user_email,\n              user_nicename: r.user_nicename,\n              user_display_name: r.user_display_name\n            });\n            this.props.navigation.navigate('Inicio')\n          }\n          else if(r.data.status == 403){\n            Alert.alert( 'Error','Nombre de usuario o Contraseña incorrecta');\n          }\n          \n         console.log(r);\n    }).catch((error)=>{\n        console.log(error.message)\n    })\n    ;\n    \n\n  };\n\n  render(){\n    \n    return (\n    <KeyboardAvoidingView\n        style={styles.container}\n        behavior=\"padding\"\n        enabledn      >\n      <View style={styles.container}>\n        <Image source={imageLogo} style={styles.logo} />\n        <View style={styles.inputView} >\n          <TextField id=\"email\" label=\"Correo Electrónico\" onChangeText={text => this.setState({email:text})} />\n        </View>\n        <View style={styles.inputView} >\n          <TextField id=\"passwd\" type=\"password\" label=\"Password\" onChangeText={text => this.setState({password:text})} />\n        </View>\n        <Button\n            variant=\"contained\"\n            color=\"primary\"\n            endIcon={<AccountBoxIcon />}\n            onPress={this.login}\n        >\n            Iniciar Sesión\n      </Button>\n        <TouchableOpacity style={styles.loginBtn} onPress={this.login}>\n          <Text style={styles.loginText}>Iniciar Sesión</Text>\n        </TouchableOpacity>\n\n  \n      </View>\n    </KeyboardAvoidingView>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    width:\"100%\",\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  },\n  \n  logo:{\n    flex: 1,\n    width: \"30%\",\n    resizeMode: \"contain\",\n    alignSelf: \"center\",\n    top:-30\n  },\n  \n  forgot:{\n    color:\"white\",\n    fontSize:11\n  },\n  loginBtn:{\n    width:\"80%\",\n    backgroundColor:\"#fb5b5a\",\n    borderRadius:25,\n    height:50,\n    alignItems:\"center\",\n    justifyContent:\"center\",\n    marginTop:40,\n    marginBottom:10\n  },\n  loginText:{\n    color:\"white\"\n  }\n});"]},"metadata":{},"sourceType":"module"}